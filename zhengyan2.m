%%  ================Code-01: Time Domain Response of Large Loop Source in Layered Media ===================
function  y=zhengyan2(rho,h)
% >>> Stratigraphic model parameters
dt = -6:0.1:-3;
t = 10.^dt;
I=1;
r=100;%Loop radius
mu0 = 4*pi*10^(-7);
sigma = 1./rho;  %conductivity 
LayNum = length(sigma);  %Number of layers
M = I*r;

% >>> Hankel transform coefficient J1 (47 points)
a = -3.05078187595;
s = 0.110599010095;
w = [3.17926147465000e-06,-9.73811660718000e-06,1.64866227408000e-05,-1.81501261160000e-05,1.87556556369000e-05,...
       -1.46550406038000e-05,1.53799733803000e-05,-6.95628273934000e-06,1.41881555665000e-05,3.41445665537000e-06,...
        2.13941715512000e-05,2.34962369042000e-05,4.84340283290000e-05,7.33732978590000e-05,0.000127703784430000,...
        0.000208120025730000,0.000349803898913000,0.000579107814687000,0.000965887918451000,0.00160401273703000,...
        0.00266903777685000,0.00443111590040000,0.00735631696247000,0.0121782796293000,0.0201097829218000,...
        0.0330096953061000,0.0537143591532000,0.0860516613299000,0.134267607144000,0.200125033067000,...
        0.274027505792000,0.318168749246000,0.241655667461000,-0.0540549161658000,-0.446912952135000,...
       -0.192231885629000,0.552376753950000,-0.357429049025000,0.141510519002000,-0.0461421935309000,...
        0.0148273761923000,-0.00507479209193000,0.00183829713749000,-0.000667742804324000,0.000221277518118000,...
       -5.66248732755000e-05,7.88229202853000e-06];
   
m = 1:length(w);  
lambda = 1/r*10.^(a+(m-1)*s); 
 
% >>> G-S transformation coefficient
Gs =  [-1.66666666666667e-02,1.60166666666667e+01,-1.24700000000000e+03,2.75543333333333e+04,-2.63280833333333e+05,...
            1.32413870000000e+06,-3.89170553333333e+06,7.05328633333333e+06,-8.00533650000000e+06,5.55283050000000e+06,...
           -2.15550720000000e+06,3.59251200000000e+05];  
       

for n = 1:length(t)
    % >>> Calculate the magnetic field Hz (t) at each time point
    for k = 1:length(Gs)
        sm = log(2)*k/t(n);        
        % >>> Calculate the Hankel transform for each frequency point
        m1 =  sqrt(lambda.^2 + sm.*mu0 * sigma(1));
        % >> R1
        Rj1 = 1.0*ones(1,length(w));
        for kk = LayNum - 1:-1:1
            mj =  sqrt(lambda.^2 + sm.*mu0 * sigma(kk));
            mj1 =  sqrt(lambda.^2 + sm.*mu0 * sigma(kk+1));
            Rj = (mj.*Rj1 + mj1.*tanh(mj.*h(kk)))./(mj1 + mj.*Rj1.*tanh(mj.*h(kk)));
            Rj1 = Rj;
        end
        R1 = Rj1;
        % >>> kernel function
        Km = M*lambda.^2./(lambda + m1./R1);
        % >>> Hankel transform
        Hz_sm(k) = Km*w'/r;
        % >> Step input
        t0=1e-6;
        S=(1-exp(-t0*sm))/(t0*sm.^2);
        Hz_sm(k) = Hz_sm(k)*S; 
%        Hz_sm(k) = Hz_sm(k)/sm; 
        
    end
    Hz_t(n)=log(2)/t(n)*Hz_sm*Gs';
end
 Hz=I/(2*r)-Hz_t;
y=Hz;
end
